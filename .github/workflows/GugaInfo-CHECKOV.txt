*** ERRO 01:

Check: CKV_AWS_118: "Ensure that enhanced monitoring is enabled for Amazon RDS instances"
	FAILED for resource: aws_db_instance.default
Error: 	File: /aws/db-app.tf:1-41
	Guide: https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances
		1  | resource "aws_db_instance" "default" {
		2  |   name                   = var.dbname
		3  |   engine                 = "mysql"
		4  |   option_group_name      = aws_db_option_group.default.name
		5  |   parameter_group_name   = aws_db_parameter_group.default.name
		6  |   db_subnet_group_name   = aws_db_subnet_group.default.name
		7  |   vpc_security_group_ids = ["${aws_security_group.default.id}"]
		8  | 
		9  |   identifier              = "rds-${local.resource_prefix.value}"
		10 |   engine_version          = "8.0" # Latest major version 
		11 |   instance_class          = "db.t3.micro"
		12 |   allocated_storage       = "20"
		13 |   username                = "admin"
		14 |   password                = var.password
		15 |   apply_immediately       = true
		16 |   multi_az                = false
		17 |   backup_retention_period = 0
		18 |   storage_encrypted       = false
		19 |   skip_final_snapshot     = true
		20 |   monitoring_interval     = 0
		21 |   publicly_accessible     = true
		22 | 
		23 |   tags = merge({
		24 |     Name        = "${local.resource_prefix.value}-rds"
		25 |     Environment = local.resource_prefix.value
		26 |     }, {
		27 |     git_commit           = "d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0"
		28 |     git_file             = "terraform/aws/db-app.tf"
		29 |     git_last_modified_at = "2020-06-16 14:46:24"
		30 |     git_last_modified_by = "nimrodkor@gmail.com"
		31 |     git_modifiers        = "nimrodkor"
		32 |     git_org              = "bridgecrewio"
		33 |     git_repo             = "terragoat"
		34 |     yor_trace            = "47c13290-c2ce-48a7-b666-1b0085effb92"
		35 |   })
		36 | 
		37 |   # Ignore password changes from tf plan diff
		38 |   lifecycle {
		39 |     ignore_changes = ["password"]
		40 |   }
		41 | }

        *** Solução: 

Ensure enhanced monitoring for Amazon RDS instances is enabled

Error: Enhanced monitoring for Amazon RDS instances is disabled

Bridgecrew Policy ID: BC_AWS_LOGGING_28
Checkov Check ID: CKV_AWS_118
Severity: LOW
Suggest Edits
Enhanced monitoring for Amazon RDS instances is disabled
Description

TBA
Fix - Buildtime
Terraform

    Resource: aws_db_instance
    Argument: monitoring_interval

resource "aws_db_instance" "default" {
  allocated_storage    = 10
  ...
+ monitoring_interval  = 5
  }

  *** ERRO 02:

  Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group.default
Error: 	File: /aws/db-app.tf:116-133
	Guide: https://docs.bridgecrew.io/docs/networking_31
		116 | resource "aws_security_group" "default" {
		117 |   name   = "${local.resource_prefix.value}-rds-sg"
		118 |   vpc_id = aws_vpc.web_vpc.id
		119 | 
		120 |   tags = merge({
		121 |     Name        = "${local.resource_prefix.value}-rds-sg"
		122 |     Environment = local.resource_prefix.value
		123 |     }, {
		124 |     git_commit           = "d68d2897add9bc2203a5ed0632a5cdd8ff8cefb0"
		125 |     git_file             = "terraform/aws/db-app.tf"
		126 |     git_last_modified_at = "2020-06-16 14:46:24"
		127 |     git_last_modified_by = "nimrodkor@gmail.com"
		128 |     git_modifiers        = "nimrodkor"
		129 |     git_org              = "bridgecrewio"
		130 |     git_repo             = "terragoat"
		131 |     yor_trace            = "7b251090-8ac1-4290-bd2e-bf3e16126430"
		132 |   })
		133 | }

        *** Solução:

Ensure every Security Group rule has a description

Error: Not every Security Group rule has a description

Bridgecrew Policy ID: BC_AWS_NETWORKING_31
Checkov Check ID: CKV_AWS_23
Severity: LOW
Suggest Edits
Not every Security Group rule has a description
Description

Descriptions can be up to 255 characters long and can be set and viewed from the AWS Management Console, AWS Command Line Interface (CLI), and the AWS APIs.

We recommend you add descriptive text to each of your Security Group Rules clarifying each rule's goals, this helps prevent developer errors.
Fix - Runtime
AWS Console

    Log in to the AWS Management Console at https://console.aws.amazon.com/.
    Open the Amazon VPC console.
    Select Security Groups.
    Select Create Security Group.
    Select a Security Group and review all of the descriptions.
    To modify the rules and descriptions, click Edit.

Fix - Buildtime
Terraform

Add a description to your ingress or egress rule.

resource "aws_security_group" "examplea" {
  name        = var.es_domain
  description = "Allow inbound traffic to ElasticSearch from VPC CIDR"
  vpc_id      = var.vpc


  ingress {
    cidr_blocks = ["10.0.0.0/16"]
   + description = "What does this rule enable"
    from_port   = 80
    protocol    = "tcp"
    to_port     = 80
  }
}

*** ERRO 03:

Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.db_app
Error: 	File: /aws/db-app.tf:242-412
	Guide: https://docs.bridgecrew.io/docs/general_13
		Code lines for this resource are too many. Please use IDE of your choice to review the file.

*** Solução:

Ensure Instances and Launch configurations use encrypted EBS volumes

Error: instances or Launch configurations do not have encrypted EBS volumes

Bridgecrew Policy ID: BC_AWS_GENERAL_13
Checkov Check ID: CKV_AWS_8
Severity: HIGH
Suggest Edits
Launch configurations do not have encrypted EBS volumes
Description

Amazon Elastic Block Store (EBS) volumes allow you to create encrypted launch configurations when creating EC2 instances and auto scaling. When the entire EBS volume is encrypted, data stored at rest on the volume, disk I/O, snapshots created from the volume, and data in-transit between EBS and EC2 are all encrypted.
Fix - Runtime
AWS Console

To change the policy using the AWS Console, follow these steps:

    Log in to the AWS Management Console at https://console.aws.amazon.com/.
    Open the Amazon EC2 console.
    Navigate to Auto Scaling.
    Create a new launch configuration.
    Add an encrypted EBS volume (Add Storage).

CLI Command

aws autoscaling create-launch-configuration 
--launch-configuration-name my-launch-config
--image-id ami-c6169af6
--instance-type m1.medium
--encrypted true

Fix - Buildtime
Terraform

    Resource: aws_launch_configuration
    Attribute: encrypted - (Optional) Whether the volume should be encrypted or not. Do not use this option if you are using snapshot_id as the encrypted flag will be determined by the snapshot. (Default: false).

resource "aws_launch_configuration" "example" {
  ...
  instance_type = "t2.micro"
+ root_block_device {
+ encrypted     = true
+ }
  ...
}

CloudFormation

    Resource: AWS::AutoScaling::LaunchConfiguration
    Attribute: Properties.BlockDeviceMappings

AutoScalingConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ...
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
+       Ebs:
          ...
+         Encrypted: true
      - DeviceName: "/dev/sdf"
        Ebs:
            ...
-         Encrypted: false
            - DeviceName: "/dev/sdc"
-       VirtualName: ephermal
